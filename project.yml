---
version: 0.1.0-dev

matrix:
  run:
    - # Execution 1: MASATIv2
      dataset: MASATIv2ProcessedDataset

datasets:
  - name: AirbusShipDetectionRawDataset
    folder: 'data/download/airbus-ship-detection'
    params:
      img_width: 768
      img_height: 768

  - name: MASATIv2RawDataset
    folder: 'data/download/MASATI-v2'
    params:
      img_width: 512
      img_height: 512

  - name: MASATIv2ProcessedDataset
    folder: 'data/processed/MASATI-v2'


models:
  - name: AutoEncoder
    src: 'src/aerial_anomaly_detection/models/autoencoder.py:AutoEncoder'
    params:
      latent_dimension: 1000
      img_width: 32
      img_height: 32

params:
  run_folder: 'runs'
  batch_size: 256
  n_epochs: 20

jobs:
  # - name: Preprocess Airbus Ship Detection
  #   dataset: AirbusShipDetectionRawDataset
  #   params:
  #     output_dataset_folder: 'data/processed/airbus-ship-detection'
  #   steps:
  #     - name: Calculate Ship Masks
  #       python-module: aerial_anomaly_detection.preprocess.mask_generation.airbus_ship_detection
  #       params:
  #         mask_output_folder: '{output_dataset_folder}/full_masks'
  #       if:
  #         not_file: '{output_dataset_folder}/index.csv'

  - name: Preprocess MASATI-v2 dataset
    dataset: MASATIv2RawDataset
    params:
      output_dataset_folder: 'data/processed/MASATI-v2'
    steps:
      - name: Partition dataset into train/val/test partitions
        python-module: aerial_anomaly_detection.preprocess.partition.masati_v2
        params:
          train_size_pct: 0.85
        if:
          not_file: '{output_dataset_folder}/partitions.csv'

      - name: Mask generation
        python-module: aerial_anomaly_detection.preprocess.mask_generation.masati_v2
        params:
          mask_output_folder: '{output_dataset_folder}/full_masks'
        if:
          not_file: '{output_dataset_folder}/masks.csv'

      - name: Divide images into smaller and overlapped tiles
        python-module: aerial_anomaly_detection.preprocess.tile.masati_v2
        params:
          tile_x_size: 32
          tile_y_size: 32
          x_step: 32
          y_step: 32
        if:
          not_file: '{output_dataset_folder}/index.csv'

      - name: Stats calculation
        python-module: aerial_anomaly_detection.preprocess.stats.masati_v2
        if:
          not_file: '{output_dataset_folder}/info.ini'

      - name: Tile normalization
        python-module: aerial_anomaly_detection.preprocess.norm.masati_v2

      - name: Mask tiling
        python-module: aerial_anomaly_detection.preprocess.tile.mask_tiling_masati_v2
        params:
          tile_x_size: 32
          tile_y_size: 32
          x_step: 32
          y_step: 32

  - name: Train
    steps:
      - name: Training the Convolutional AutoEncoder
        model: AutoEncoder
        dataset: '{matrix.run.dataset}'
        python-module: aerial_anomaly_detection.train.autoencoder_train
        params:
          out_folder: models