---
version: 0.1.0-dev

matrix:
  run:
    # - # Execution 1: LandCoverAI
    #   dataset: LandCoverAI
    #   model: AutoEncoder

    - # Execution 2: MASATIv2
      dataset: MASATIv2
      model: AutoEncoder

datasets:
  - name: LandCoverAI
    folder: 'data/download/LandCoverAI'
    params:
      processed_folder: 'data/processed/LandCoverAI'

  - name: MASATIv2
    folder: 'data/download/MASATI-v2'
    params:
      processed_folder: 'data/processed/MASATI-v2'


models:
  - name: AutoEncoder
    src: 'src/aerial_anomaly_detection/models/autoencoder.py:AutoEncoder'
    params:
      latent_dimension: 1000
      img_width: 32
      img_height: 32
      # pretrained_weights: weights/autoencoder.pth

params:
  run_folder: 'runs'
  batch_size: 256
  n_epochs: 200

jobs:
  - name: Preprocess LandCover.ai dataset
    dataset: LandCoverAI
    steps:
      - name: Setup LandCover.ai dataset
        python-module: aerial_anomaly_detection.preprocess.setup.landcover_ai
        if:
          not_file: '{dataset.params.processed_folder}/scene_index.csv'

      - name: Scene tiling
        python-module: aerial_anomaly_detection.preprocess.tile.landcover_ai
        params:
          tile_width: 32
          tile_height: 32
          tile_x_step: 32
          tile_y_step: 32
          test_tiles_per_type_and_scene: 100
        if:
          not_file: '{dataset.params.processed_folder}/tile_index.csv'

      - name: Tile partitioning
        python-module: aerial_anomaly_detection.preprocess.partition.landcover_ai
        params:
          train_pct: 0.8

  - name: Preprocess MASATI (v2) dataset
    dataset: MASATIv2
    steps:
      - name: Setup MASATI (v2) dataset
        python-module: aerial_anomaly_detection.preprocess.setup.masati_v2
        if:
          not_file: '{dataset.params.processed_folder}/scene_index.csv'

      - name: Scene tiling
        python-module: aerial_anomaly_detection.preprocess.tile.masati_v2
        params:
          tile_width: 32
          tile_height: 32
          tile_x_step: 32
          tile_y_step: 32
        if:
          not_file: '{dataset.params.processed_folder}/tile_index.csv'

  - name: Train
    dataset: '{matrix.run.dataset}'
    model: '{matrix.run.model}'
    params:
      out_folder: '{run_folder}/{model.name}/{dataset.name}/train'
    steps:
      - name: Generic model training
        python-module: aerial_anomaly_detection.train.train_model
        params:
          learning_rate: 0.0001

  - name: Evaluation
    dataset: '{matrix.run.dataset}'
    model: '{matrix.run.model}'
    params:
      out_folder: '{run_folder}/{model.name}/{dataset.name}/inference'
    steps:
      - name: Generic model evaluation
        python-module: aerial_anomaly_detection.evaluation.evaluate_model
        params:
          tile_width: 32
          tile_height: 32
          tile_x_step: 32
          tile_y_step: 32
        if:
          not_file: '{out_folder}/global_metrics.csv'